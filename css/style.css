@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

/* These variables mean I don't have to write my colour hex codes in in every instance, saving me time */
:root {
	--yellow: #FFCF00;
	--brown: #460408;
	--blue: #000047;
}

/* Some properties are useful to just apply to every element by default */
* {
    margin: 0; /* Defaults the margin to 0 for easier styling */
	box-sizing: border-box;
	font-family: "Inter", sans-serif;
	font-optical-sizing: auto;
	scroll-behavior: smooth;
	interpolate-size: allow-keywords;
}

/* Main website wrapper */
#grid-container {
	overflow-x: hidden; 
	display: grid;
	grid-template-columns: 100%;
	height: 100%;
}

/* This makes the layout slightly different on the home page. The calc(100vh - 136px) makes sure the height of the header and therefore the hero image is exactly the same height as the screen. */
#home #grid-container {
	grid-template-rows: 136px calc(100vh - 136px) auto auto;
}

/* Activity page grid layout */
.activity #grid-container {
	grid-template-rows: 136px auto auto;
}

/* The following section is the styling for the navigation bar */

nav #links-background {
    background-color: var(--blue);
    width: 100%;
	height: calc(100% - 12px);
    display: flex;
    flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 30px;
}

nav #logo {
	height: 76px;
	width: auto;
	display: flex;
	align-items: center;
	gap: 40px;
}

nav #logo img {
	height: 100%;
}

nav #logo h2 {
	display: inline;
	font-size: 40px;
	color: white;
}

nav ul {
	height: min-content;
	display: flex;
	list-style: none;
}

nav ul li {
	width: auto;
}

nav li > a {
	font-size: 25px;
	color: white;
	font-weight: 400;
	width: 100%;
	height: 100%;
	padding-left: 27px;
	padding-right: 28px;
	display: inline-block;
}

nav a {
	text-decoration: none;
}

nav #page-indicator {
	position: absolute;
	height: 5px;
	background-color: white;
	margin-top: 7px;
}

nav .accent-line {
	background-color: var(--yellow);
	height: 12px;
}

/* Hides hamburger menu by default on desktops */
nav #hamburger {
	display: none;
}

nav #menu > p {
	display: none;
}

/* These are the media queries for the navigation section, to make it responsive */

@media screen and (max-width: 1600px) {
	nav ul li a {
		font-size: 20px;
		padding-left: 17px;
		padding-right: 18px;
	}
}

@media screen and (max-width: 1260px) {
	nav ul li a {
		padding-left: 12px;
		padding-right: 13px;
	}
}

/* This media query adds all the styling to change into a hamburger menu */
@media screen and (max-width: 1200px) {
	nav #hamburger {
		display: block;
		z-index: 2;
	}

	nav .bar {
		width: 56px;
		height: 8.3px;
		margin: 8px 0;
		background-color: white;
		transition-duration: 200ms;
		border-radius: 10px;
	}

	#menu {
		height: 0;
		overflow: hidden;
		position: absolute;
		right: 0;
		top: -56px;
		background-color: var(--blue);
		border-left: 6px solid var(--yellow);
		border-bottom: 6px solid var(--yellow);
		border-radius: 0 0 0 20px;
		z-index: 1;
		transition-duration: 200ms;
	}

	#menu.opened {
		height: auto;
		top: 0;
	}

	nav #menu.opened > p {
		display: block;
	}

	/* The following three rulesets make the hamburger turn nicely into a close button */

	#hamburger:has(~ #menu.opened) #bar1 {
		transform: translate(0, 16px) rotate(-45deg);
	}

	#hamburger:has(~ #menu.opened) #bar2 {
		opacity: 0;
	}

	#hamburger:has(~ #menu.opened) #bar3 {
		transform: translate(0, -16px) rotate(45deg);
	}

	#menu > p {
		color: white;
		font-size: 40px;
		font-weight: 600;
		margin: 35px 50px 0;
	}

	#menu ul {
		flex-direction: column;
		padding: 0;
		margin: 20px 0 15px;
	}

	#menu li a {
		padding: 18px 50px;
	}

	#menu li a p {
		width: fit-content;
	}
}

@media screen and (max-width: 550px) {
	nav #links-background {
		height: calc(100% - 8px);
	}

	nav .accent-line {
		height: 8px;
	}

	nav #logo {
		height: 50px;
		gap: 25px;
	}

	nav #logo h2 {
		font-size: 25px;
	}

	nav #hamburger {
		scale: 0.7;
	}

	#menu > p {
		margin-top: 18px;
	}
}

/* End of navigation styling */

/* The following section is the styling for the header */

#home header {
	display: flex;
	flex-direction: column;
	position: relative;
}

#home header h1 {
	font-size: 200px;
	margin: auto auto 0;
	color: white;
}

#home header h3 {
	font-size: 150px;
	margin: 0 auto auto;
	color: white;
}

/* The background image needed its own div, so that I could apply the filter property without it affecting the text within */
#home header .background {
	background-image: url(../images/wainui_5.jpg);
	background-position: center;
	background-size: cover;
	height: calc(100vh - 8rem);
	width: 100%;
	z-index: -1;
	position: absolute;
	filter: blur(4px) brightness(0.8);
	/* The scale here is needed to make the blurred edges of the header image not be visible, as they mix with the white behind and it looks bad*/
	scale: 1.013;
}

/* Following are media queries for header, generally making it smaller as the screen gets smaller */

@media screen and (max-width: 1600px) {
	#home header h1 {
		font-size: 150px;
	}

	#home header h3 {
		font-size: 112px;
	}
}

@media screen and (max-width: 1200px) {
	#home #grid-container {
		grid-template-rows: 136px 500px auto auto;
	}

	#home header .background {
		height: 500px;
		filter: blur(3px) brightness(0.8);
		/* As the image size and blur level is adjusted, the scale also needs to be */
		scale: 1.035;
	}
}

@media screen and (max-width: 1000px) {
	#home header h1 {
		font-size: 120px;
	}

	#home header h3 {
		font-size: 90px;
	}
}

@media screen and (max-width: 800px) {
	#home #grid-container {
		grid-template-rows: 136px 300px auto auto;
	}

	#home header .background {
		height: 300px;
		filter: blur(2px) brightness(0.8);
		scale: 1.04;
	}

	#home header h1 {
		font-size: 80px;
	}

	#home header h3 {
		font-size: 60px;
	}
}

@media screen and (max-width: 550px) {
	#home #grid-container {
		grid-template-rows: 100px 300px auto auto;
	}

	.activity #grid-container {
		grid-template-rows: 100px auto auto;
	}

	#home header h1 {
		font-size: 60px;
	}

	#home header h3 {
		font-size: 45px;
	}
}

@media screen and (max-width: 440px) {
	#home #grid-container {
		grid-template-rows: 100px 200px auto auto;
	}

	#home header .background {
		height: 200px;
		scale: 1.058;
	}

	#home header h1 {
		font-size: 48px;
	}

	#home header h3 {
		font-size: 36px;
	}
}

@media screen and (max-width: 400px) {
	#home .left > p {
		font-size: 15px;
	}

	#home header .background {
		filter: blur(1.5px) brightness(0.8);
	}
}

.activity .activity-header {
	background-color: var(--blue);
	border: 12px solid var(--yellow);
	border-radius: 60px;
	padding: 63px 0;
	text-align: center;
}

.activity .activity-header h1 {
	color: white;
	font-size: 100px;
	font-weight: 600;
	padding: 0 20px;
}

@media screen and (max-width: 1600px) {
	.activity .activity-header {
		border-width: 10px;
		padding: 50px 0;
	}

	.activity .activity-header h1 {
		font-size: 80px;
	}
}

/* This helps fix some odd wrapping in the header of the Adrenalin Forest section */
@media screen and (max-width: 1600px) and (min-width: 1180px) {
	.activity .activity-header h1 {
		padding: 0 72px;
	}
}

@media screen and (max-width: 1300px) {
	.activity .activity-header {
		border-width: 10px;
		padding: 40px 0;
	}

	.activity .activity-header h1 {
		font-size: 64px;
	}
}

@media screen and (max-width: 550px) {
	.activity .activity-header {
		border-width: 7px;
		padding: 30px 0;
		border-radius: 40px;
	}

	.activity .activity-header h1 {
		font-size: 32px;
	}
}

/* End of overall header styling */

/* The following is the styling for the scroll nudge */

#scroll-nudge {
	position: absolute;
	bottom: 0px;
	width: 100%;
	height: 100px;
	display: flex;
	flex-direction: column;
	align-items: center;
	padding-top: 25px;
}

#nudge-text {
	color: white;
	display: none;
	animation: fade 200ms;
	font-size: 15px
}

/* This makes the nudge text show permanently for devices that don't have the ability to hover, or devices that have a "course" input, i.e. phones (test 32) */
@media (hover: none) or (pointer: coarse) {
	#nudge-text {
		display: block;
	}
}

/* Using keyframes for this animation provides more flexibility; it wouldn't work with the transition property */
@keyframes fade {
	from {
		opacity: 0.1;
	} to {
		opacity: 1;
	}
}

/* Like all the SVGs on the website, the SVG properties are applied in the CSS instead of inline, for easier changing */
#arrow {
	position: absolute;
	fill: none;
	stroke: white;
	stroke-linecap: round;
	stroke-linejoin: round;
	stroke-width: 400px;
	height: 20px;
	width: 40px;
	bottom: 25px;
	transition-duration: 200ms;
}

#scroll-nudge:hover #nudge-text {
	display: block;
}

#scroll-nudge:hover #arrow {
	bottom: 20px;
}

@media screen and (max-width: 1200px) {
	#scroll-nudge {
		display: none;
	}
}

/* End of scroll nudge styling */

/* The following is for the main section of each page */

/* This sets the layout and gap of the articles, which on most pages is only one. On Page 3 this sets the gap between the Pool and Rangituhi articles. */
main {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 140px;
	padding: 140px 0;
}

/* The border seperating the hero image from the main content */
#home main {
	border-top: 18px solid var(--blue);
}

/* The gap here now sets the gap between the article header (e.g. Waninuiomata Camp) and the row-content with the actual content */
article {
	display: flex;
	flex-direction: column;
	gap: 120px;
	/* The width is always three quarters of the available screen width */
	width: 75vw;
}

/* The following are the media queries for the very broad layout of each page */

@media screen and (max-width: 1300px) {
	main {
		padding: 100px 0;
	}
}

@media screen and (max-width: 1200px) {
	#home main {
		border-top: 14px solid var(--blue);
	}
}

@media screen and (max-width: 830px) {
	main {
		padding: 40px 0;
	}

	#home main {
		border-top: 12px solid var(--blue);
	}
}

@media screen and (max-width: 550px) {
	main {
		padding: 25px 0;
	}
}

/* This is the div that sets up the two columns on each page, with a constant 13% gap */
.row-content {
	display: flex;
	flex-direction: row;
	gap: 13%;
}

/* The section is the left and right columns */
article section {
	display: flex;
	flex-direction: column;
}

/* Text column; always half the available width */
.left {
	width: 50%;
	gap: 70px;
	font-size: 18px;
}

/* Image column - 13% + 50% + 37% = 100% */
.right {
	width: 37%;
	gap: 85px;
}

/* All the standard images on the website have the same styling */
.image {
	width: 100%;
	background-size: cover;
	background-position: center;
	border: 11px solid var(--brown);
}

/* The .images in the left column are hidden by default as they only show on mobile... */
.left .image {
	display: none;
}

/* ...except for ones with the perm-img class that are always shown */
.left .image.perm-img {
	display: block;
}

/* The following are the media queries for the finer details of the the layout */

@media screen and (max-width: 1550px) {
	article {
		width: 90vw;
	}

	.row-content {
		gap: 8%;
	}

	.right {
		width: 42%;
	}
}

/* The 1000px breakpoint is important as this is where the layout changed from two columns to one */
@media screen and (max-width: 1000px) {
	article {
		width: 70vw;
	}

	.left {
		width: 100%;
		gap: 60px;
	}

	.right {
		display: none;
	}

	.row-content {
		flex-direction: column;
	}

	.left .image {
		display: block;
		height: 350px;
	}
}

@media screen and (max-width: 830px) {
	article {
		width: 90vw;
		gap: 70px;
	}
}

@media screen and (max-width: 550px) {
	article {
		gap: 45px;
	}

	.left {
		gap: 45px;
	}
}

@media screen and (max-width: 400px) {
	article {
		gap: 35px;
	}

	.image {
		border-width: 8px;
	}
}

/* End of overall general <main> stlying */

/* This covers all the divs that need the same border radius. Doing it this way makes it easy to change the radius all at once */
article section > div, article > #row-content > div, #form-box, #contact-details, #contact .image {
	border-radius: 35px;
}

/* The following three rulesets set up the brown koru background, which works automatically with only a class added to the box that I want to have the pattern. Everything else is managed by the CSS.  */

.koru-background {
	background-color: #460408;
	position: relative;
}

/* Using the pseudo-element ::before, I can modify the opacity of the koru pattern and put it in front of the brown but behind the text, all without making another element */
.koru-background::before {
	content: '';
	background-image: url(../images/koru_background.jpg);
	opacity: 0.05;
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	background-size: cover;
	background-position: center;
	border-radius: inherit;
}

/* This is needed to make the elements show in front of the koru */
.koru-background > * {
	position: relative;
}

/* Using classes for some font weights means I can quickly add class="bold" or class="semi-bold" to text that needs it, rather than manaully writing the font weight in CSS everywhere text like that appears */

.bold {
	font-weight: 700;
}

.semi-bold {
	font-weight: 600;
}

/* The following is the styling for the group links box on the home page */

#group-links {
	padding: 27px;
}

#group-links p {
	color: white;
	font-size: 16px;
}

#group-links #buttons {
	margin-top: 27px;
	display: flex;
	justify-content: space-between;
}

/* Putting the buttons into two .button-pairs means that when the screen gets too narrow it will wrap to be a 2x2 grid instead of 1 on the second row */

#group-links .button-pair {
	display: flex;
	justify-content: space-between;
	width: 48%;
}

#group-links .group-button {
	border-radius: 43px;
	background-color: var(--yellow);
	width: 46%;
	height: 45px;
	transition-duration: 100ms;
}

#group-links .group-button:hover {
	scale: 1.03;
}

#group-links a {
	width: 100%;
	height: 100%;
	display: inline-block;
	text-align: center;
	align-content: center;
	text-decoration: none;
	color: initial;
}

/* The following are the group links media queries */

@media screen and (max-width: 1100px) and (min-width: 1000px) {
	#group-links a {
		font-size: 16px;
	}
}

@media screen and (max-width: 560px) {
	#group-links #buttons {
		flex-direction: column;
		gap: 25px;
	}

	#group-links .button-pair {
		width: 100%;
	}
}

@media screen and (max-width: 400px) {
	#group-links p {
		font-size: 14px;
	}

	#group-links a {
		font-size: 16px;
	}
}

/* End of group links styling */

/* The following is the styling for the meeting time and location boxes on the activity pages */

.meeting-time-location {
	display: flex;
	flex-direction: column;
	color: white;
	padding: 46px;
	gap: 45px;
	text-align: center;
}

.meeting-time-location .symbols {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
}

.meeting-time-location h5 {
	font-size: 30px;
	font-weight: 500;
}

.meeting-time-location p {
	font-size: 21px;
}

.meeting-time-location .symbol {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 22px;
}

.meeting-time-location svg {
	width: 80px;
	height: 80px;
	fill: none;
	stroke: white;
	stroke-width: 2px;
	stroke-linecap: round;
	stroke-linejoin: round;
}

/* The following are the media queries for the meeting time and location boxes */

/* Changes it to have time on top of location instead of adjacent */
@media screen and (max-width: 1300px) {
	.meeting-time-location .symbols {
		flex-direction: column;
		gap: 30px;
	}
}

/* The box gets wider again when the general layout switches to one column, so the MTAL box goes to adjacent again */
@media screen and (max-width: 1000px) {
	.meeting-time-location .symbols {
		flex-direction: row;
		gap: 0;
	}
}

@media screen and (max-width: 650px) {
	.meeting-time-location .symbols {
		flex-direction: column;
		gap: 30px;
	}

	.meeting-time-location svg {
		width: 60px;
		height: 60px;
	}
}

@media screen and (max-width: 550px) {
	.meeting-time-location svg {
		width: 40px;
		height: 40px;
	}

	.meeting-time-location h5 {
		font-size: 22px;
	}

	.meeting-time-location p {
		font-size: 16px;
	}
}

@media screen and (max-width: 400px) {
	.meeting-time-location {
		padding: 30px 23px;
		gap: 35px;
	}

	.meeting-time-location p {
		font-size: 13px;
	}
}

/* End of MTAL box styling */

/* The following is the styling for the Wainui Preview button on the home page */

#wainui-preview {
	background-image: url(../images/wainui_8.jpg);
	background-position: center;
	background-size: cover;
	height: 259px;
	transition: scale 200ms;
	border: 7px solid var(--brown);
}

#wainui-preview:hover {
	scale: 1.03;
}

#wainui-preview a {
	width: 100%;
	height: 100%;
	display: inline-block;
	text-decoration: none;
	padding: 39px 20px;
}

#wainui-preview h4 {
	font-weight: 750;
	font-size: 44px;
	text-align: center;
	color: white;
}

@media screen and (max-width: 500px) {
	#wainui-preview h4 {
		font-size: 35px;
	}
}

@media screen and (max-width: 359px) {
	#wainui-preview {
		padding-top: 50px;
	}
}

/* End of Wainui Preview styling */

/* The .paragraph class is the paragraps with a small heading on the activity pages, and a flexbox makes setting the gap between very easy */
.paragraph {
	display: flex;
	flex-direction: column;
	gap: 34px;
}

/* Sometimes, it is easier to put the font weight in here instead of using a semi-bold class, so I've done that here */
.paragraph h3 {
	font-size: 49px;
	font-weight: 600;
}

/* All the standard images in the left column should be 350px (on desktop) */
.left .image {
	height: 350px;
}

/* This makes the images on the right fill the available space; see Test 4 */
.right .image {
	flex-grow: 1;
}

@media screen and (max-width: 400px) {
	.paragraph {
		gap: 18px;
		font-size: 15px;
	}

	.paragraph h3 {
		font-size: 37px;
	}

	.left .image {
		height: 250px;
	}
}

/* The following is the styling for the .row-content stuff on the contact page */

/* This is the equivalent of the .left section, but as it's just one box it's different here */
#contact-details {
	display: flex;
	flex-direction: column;
	color: white;
	padding: 50px 46px;
	gap: 57px;
	width: 50%;
}

#contact-details .detail {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 39px;
}

#contact-details svg {
	width: 80px;
	height: 80px;
	fill: none;
	stroke: white;
	stroke-width: 2px;
	stroke-linecap: round;
	stroke-linejoin: round;
}

#contact-details p {
	font-size: 30px;
	font-weight: 500;
}

/* This is the equivalent of the .right section */
#contact .image {
	width: 37%;
}

/* The following are the media queries to make the main part of the contact page responsive */

@media screen and (max-width: 1800px) {
	#contact-details p {
		font-size: 22px;
	}
}

@media screen and (max-width: 1550px) {
	#contact .image {
		width: 42%;
	}
}

@media screen and (max-width: 1300px) {
	#contact-details svg {
		width: 60px;
		height: 60px;
	}

	#contact-details p {
		font-size: 18px;
	}
}

@media screen and (max-width: 1080px) {
	#contact-details {
		padding: 40px 32px;
		gap: 42px;
	}

	#contact-details .detail {
		gap: 30px;
	}
}

@media screen and (max-width: 1000px) {
	#contact-details {
		width: 100%;
		padding: 50px 46px;
		gap: 57px;	
	}

	#contact-details svg {
		width: 70px;
		height: 70px;
	}

	#contact-details p {
		font-size: 23px;
	}

	#contact .image {
		width: 100%;
		height: 350px;
	}

	#contact .row-content {
		gap: 60px;
	}
}

@media screen and (max-width: 625px) {
	#contact-details svg {
		width: 60px;
		height: 60px;
	}

	#contact-details p {
		font-size: 18px;
	}
}

@media screen and (max-width: 525px) {
	#contact-details {
		gap: 40px;
		padding: 40px 36px;
	}

	#contact-details svg {
		width: 50px;
		height: 50px;
	}

	#contact-details p {
		font-size: 15px;
	}

	#contact .row-content {
		gap: 45px;
	}
}

@media screen and (max-width: 450px) {
	#contact-details {
		padding: 30px 25px;
		gap: 40px;
	}

	#contact-details .detail {
		gap: 20px;
	}

	#contact-details svg {
		width: 40px;
		height: 40px;
	}

	#contact-details p {
		font-size: 13px;
	}
}

/* End of .row-content contact page styling */

/* The following is the styling for the box with the link to the Google Form on the contact page */

#form-box {
	width: 100%;
	padding: 50px;
}

#form-box p {
	color: white;
	font-size: 24px;
}

#form-box #form-button {
	display: flex;
	border-radius: 48px;
	background-color: var(--yellow);
	width: 100%;
	margin-top: 50px;
	align-items: center;
	justify-content: center;
	padding: 30px 20px;
}

#form-box a {
	width: 100%;
	height: 100%;
	display: inline-block;
	text-align: center;
	align-content: center;
	text-decoration: underline;
	color: initial;
	font-size: 28px;
	font-weight: 600;
}

@media screen and (max-width: 1000px) {
	#form-box {
		padding: 40px;
	}

	#form-box p {
		font-size: 20px;
	}

	#form-box #form-button {
		margin-top: 40px;
	}

	#form-box a {
		font-size: 24px;
	}
}

@media screen and (max-width: 600px) {
	#form-box {
		padding: 35px;
	}

	#form-box p {
		font-size: 17px;
	}

	#form-box #form-button {
		margin-top: 30px;
		padding: 20px;
	}

	#form-box a {
		font-size: 20px;
	}
}

@media screen and (max-width: 450px) {
	#form-box {
		padding: 30px;
	}

	#form-box p {
		font-size: 14px;
	}

	#form-box a {
		font-size: 15px;
	}

	#form-box #form-button {
		border-radius: 38px;
	}
}

/* End of form box styling */

/* The following is the styling for the footer, consistent across all pages */

footer {
	background-color: var(--blue);
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 30px 40px;
}

footer p {
	color: white;
	font-size: 20px;
}

footer #footer-logo {
	display: flex;
	gap: 20px;
	align-items: center;
	text-decoration: none;
}

footer #footer-logo img {
	height: 48px;
}

footer #attribution {
	text-align: center;
	display: flex;
	flex-direction: column;
	gap: 10px;
}

footer #external-links {
	display: flex;
	flex-direction: row;
	gap: 37px;
	justify-content: end;
	align-items: end;
}

footer #external-links a {
	display: flex;
	gap: 12px;
	color: white;
}

footer #external-links svg {
	width: 24px;
	height: 24px;
	fill: none;
	stroke: white;
	stroke-width: 2px;
	stroke-linecap: round;
	stroke-linejoin: round;
}

@media screen and (max-width: 1300px) and (min-width: 876px) {
	footer #external-links {
		flex-direction: column;
		gap: 15px;
	}
}

@media screen and (max-width: 1000px) and (min-width: 876px) {
	footer p {
		font-size: 17px;
	}
}

/* When the screen is small enough the footer is displayed as a column instead of a row */
@media screen and (max-width: 875px) {
	footer {
		flex-direction: column;
		gap: 37px;
	}

	footer #footer-logo, footer #external-links {
		justify-content: center;
	}
}

@media screen and (max-width: 515px) {
	footer #external-links {
		flex-direction: column;
		gap: 10px;
	}

	footer #footer-logo, footer #external-links {
		align-items: center;
	}
}

@media screen and (max-width: 400px) {
	footer p {
		font-size: 15px;
	}

	footer #footer-logo p {
		width: min-content;
	}
}

/* End of footer styling */
